// The configuration file format is [JSON5](https://json5.org/),
// where comments and trailing commas are allowed.
// The file format is further extended to replace `${...}` notations
// with the values of corresponding environment variables.
// Keep all the credentials and private into the `.env` file
// and refer to them with `${...}` notation as needed.
{
    "default_llm": "Google Gemini 2.5 Flash Preview",
    "llms": {
        "OpenAI o3 Mini High": {
            "model": "openai/o3-mini-high",
            "model_provider": "openrouter",
            "name": "OpenAI o3 Mini High",
            "description": "OpenAI o3-mini-high is the same model as o3-mini with reasoning_effort set to high. o3-mini is a cost-efficient language model optimized for STEM reasoning tasks, particularly excelling in science, mathematics, and coding."
        },
        "OpenAI GPT-4.1": {
            "model": "openai/gpt-4.1",
            "model_provider": "openrouter",
            "name": "OpenAI GPT-4.1",
            "description": "OpenAIの最新モデル。高度な自然言語理解と推論能力を持つ"
        },
        "Google Gemini 2.5 Flash Preview": {
            "model": "google/gemini-2.5-flash-preview",
            "model_provider": "openrouter",
            "name": "Google Gemini 2.5 Flash Preview",
            "description": "Googleの最新モデル。高度な自然言語理解と推論能力を持つ"
        },
        "gpt4.1_nano": {
            "name": "GPT-4 Nano",
            "model_provider": "openrouter",
            "model": "openai/gpt-4.1-nano",
            "description": "OpenAIの軽量モデル。速度と性能のバランスが良い"
        },
        "Google Gemini 2.0 Flash": {
            "model": "google/gemini-2.0-flash-001",
            "model_provider": "openrouter",
            "name": "Google Gemini 2.0 Flash",
            "description": "Googleの高性能モデル。複雑な理解と会話に優れる"
        },
        "Anthropic Claude 3.7 Sonnet": {
            "model": "anthropic/claude-3.7-sonnet",
            "model_provider": "openrouter",
            "name": "Anthropic Claude 3.7 Sonnet",
            "description": "Anthropicの高性能モデル。特にコーディングに優れる"
        }
    },
    "example_queries": [
        "Tomorrow's weather in SF?",
        "Read and briefly summarize the LICENSE file",
        "Read the news headlines on bbc.com",
    ],
    "mcp_servers": {
        // https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem
        "filesystem": {
            "command": "npx",
            "args": [
                "-y",
                "@modelcontextprotocol/server-filesystem@latest",
                "/home/passiveradio/dev/personal/ai-agents/mcp-client-langchain-ts/",
            ]
        },
        "time": {
            "command": "docker",
            "args": [
                "run",
                "-i",
                "--rm",
                "mcp/time"
            ]
        },
        // https://github.com/modelcontextprotocol/servers/tree/main/src/fetch
        "fetch": {
            "command": "uvx",
            "args": [
                "mcp-server-fetch"
            ]
        },
        "sequentialthinking": {
            "command": "npx",
            "args": [
                "-y",
                "@modelcontextprotocol/server-sequential-thinking"
            ]
        },
        // https://github.com/modelcontextprotocol/quickstart-resources/tree/main/weather-server-python
        "weather": {
            "command": "npx",
            "args": [
                "-y",
                "@h1deya/mcp-server-weather@latest"
            ]
        },
        // https://github.com/microsoft/playwright-mcp
        "playwright": {
            "command": "npx",
            "args": [
                "-y",
                "@playwright/mcp@latest",
                "--headless"
            ]
        },
        // https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search
        "brave-search": {
            "command": "npx",
            "args": [
                "-y",
                "@modelcontextprotocol/server-brave-search@latest"
            ],
            "env": {
                "BRAVE_API_KEY": "${BRAVE_API_KEY}"
            }
        },
        "google-calendar": {
            "command": "node",
            "args": ["/home/passiveradio/dev/personal/ai-agents/mcps/google-calendar-mcp/build/index.js"]
        },
        "memory": {
            "command": "npx",
            "args": [
                "-y",
                "@modelcontextprotocol/server-memory"
            ]
        }
    }
}
